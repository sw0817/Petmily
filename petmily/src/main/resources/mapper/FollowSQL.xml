<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petmily.curation.mapper.FollowMapper">
	
	
	<!-- 남이 나를 팔로우 한 상태이면 1출력하겠지? -->
	<select id="checkF4F" resultType="int">
		select count(*)
		from follow
		where to_id=#{from_id} and from_id=#{to_id}
	</select>
	
	<!-- 맞팔 아님 -->
	<insert id="followNotF4F">
		insert into follow
		(from_id,to_id,from_nickname, to_nickname, f4f)
		values (#{from_id},#{to_id},#{from_nickname},#{to_nickname},0)
	</insert>
	
	<!-- 맞팔인 경우 -->
	<insert id="followF4F">
		insert into follow
		(from_id,to_id,from_nickname, to_nickname, f4f)
		values (#{from_id},#{to_id},#{from_nickname},#{to_nickname},1)
	</insert>
	
	<!-- 맞팔인 경우 상대방 f4f update -->
	<update id="updateF4F"> 
		update follow set f4f=1
		where to_id=#{from_id} and from_id=#{to_id}
	</update>
	
	<!-- 상대방의 f4f를 0으로 : 내가 팔로우 취소한 경우 -->
	<update id="deleteF4F"> 
		update follow set f4f=0
		where to_id=#{from_id} and from_id=#{to_id}
	</update>
	
	<delete id="unfollow">
		delete from follow where from_id=#{from_id} and to_id=#{to_id}
	</delete>
	
	<select id="isFollow" resultType="int">
		select count(*) from follow where from_id=#{from_id} and to_id=#{to_id}
	</select>

     <!-- 팔로우 리스트 조회 -->
   	<select id="followingList" resultType="com.petmily.curation.dto.FollowDto">
      select 
         from_id,
          to_id,
          f4f,
          U.user_nickname as to_nickname,
           U2.user_nickname as from_nickname,
          F.follow_date as follow_date
      from follow F 
      left outer join member U 
      on (F.to_id = U.user_id)
      left outer join member U2
      on (F.from_id=U2.user_id)
      where from_id=#{from_id}
      order by follow_date desc
   	</select>
	   
   	<!-- 팔로워 리스트 조회 -->
	<select id="followerList" resultType="com.petmily.curation.dto.FollowDto">
	      select 
	         from_id,
	          to_id,
	          f4f,
	          U.user_nickname as from_nickname,
	          U2.user_nickname as to_nickname,
	          F.follow_date as follow_date
	      from follow F 
	      left outer join member U 
	      on (F.from_id = U.user_id)
	      left outer join member U2
	      on (F.to_id=U2.user_id)
	      where to_id=#{to_id}
	      order by follow_date desc
  	</select>

	<!-- 탈퇴회원관련 팔로우 삭제 -->
	<delete id="deleteAllFollow">
		delete 
		from follow 
		where from_id=#{user_id} or to_id=#{user_id}
	</delete>
	
</mapper>